// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: adlerhurst/example/v1/example.proto

package cli

import (
	_ "github.com/adlerhurst/cli-client"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Some int32

const (
	Some_SOME_UNSPECIFIED Some = 0
	Some_SOME_SPECIFIED   Some = 1
)

// Enum value maps for Some.
var (
	Some_name = map[int32]string{
		0: "SOME_UNSPECIFIED",
		1: "SOME_SPECIFIED",
	}
	Some_value = map[string]int32{
		"SOME_UNSPECIFIED": 0,
		"SOME_SPECIFIED":   1,
	}
)

func (x Some) Enum() *Some {
	p := new(Some)
	*p = x
	return p
}

func (x Some) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Some) Descriptor() protoreflect.EnumDescriptor {
	return file_adlerhurst_example_v1_example_proto_enumTypes[0].Descriptor()
}

func (Some) Type() protoreflect.EnumType {
	return &file_adlerhurst_example_v1_example_proto_enumTypes[0]
}

func (x Some) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Some.Descriptor instead.
func (Some) EnumDescriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{0}
}

type CallRequest_Wat int32

const (
	CallRequest_WAT_UNSPECIFIED CallRequest_Wat = 0
	CallRequest_WAT_WEISS       CallRequest_Wat = 1
	CallRequest_WAT_ICH         CallRequest_Wat = 2
)

// Enum value maps for CallRequest_Wat.
var (
	CallRequest_Wat_name = map[int32]string{
		0: "WAT_UNSPECIFIED",
		1: "WAT_WEISS",
		2: "WAT_ICH",
	}
	CallRequest_Wat_value = map[string]int32{
		"WAT_UNSPECIFIED": 0,
		"WAT_WEISS":       1,
		"WAT_ICH":         2,
	}
)

func (x CallRequest_Wat) Enum() *CallRequest_Wat {
	p := new(CallRequest_Wat)
	*p = x
	return p
}

func (x CallRequest_Wat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CallRequest_Wat) Descriptor() protoreflect.EnumDescriptor {
	return file_adlerhurst_example_v1_example_proto_enumTypes[1].Descriptor()
}

func (CallRequest_Wat) Type() protoreflect.EnumType {
	return &file_adlerhurst_example_v1_example_proto_enumTypes[1]
}

func (x CallRequest_Wat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CallRequest_Wat.Descriptor instead.
func (CallRequest_Wat) EnumDescriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{2, 0}
}

type NestedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nested *NestedRequest_Nested `protobuf:"bytes,1,opt,name=nested,proto3" json:"nested,omitempty"`
	Id     string                `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NestedRequest) Reset() {
	*x = NestedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adlerhurst_example_v1_example_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedRequest) ProtoMessage() {}

func (x *NestedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adlerhurst_example_v1_example_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedRequest.ProtoReflect.Descriptor instead.
func (*NestedRequest) Descriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{0}
}

func (x *NestedRequest) GetNested() *NestedRequest_Nested {
	if x != nil {
		return x.Nested
	}
	return nil
}

func (x *NestedRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type NestedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NestedResponse) Reset() {
	*x = NestedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adlerhurst_example_v1_example_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedResponse) ProtoMessage() {}

func (x *NestedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adlerhurst_example_v1_example_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedResponse.ProtoReflect.Descriptor instead.
func (*NestedResponse) Descriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{1}
}

type CallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UseFieldName  string                 `protobuf:"bytes,1,opt,name=use_field_name,json=useFieldName,proto3" json:"use_field_name,omitempty"`
	UseCustomName string                 `protobuf:"bytes,2,opt,name=use_custom_name,json=useCustomName,proto3" json:"use_custom_name,omitempty"`
	Nested        *CallRequest_Nested    `protobuf:"bytes,3,opt,name=nested,proto3" json:"nested,omitempty"`
	RepNest       []*CallRequest_Nested  `protobuf:"bytes,4,rep,name=rep_nest,json=repNest,proto3" json:"rep_nest,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Payload       *structpb.Struct       `protobuf:"bytes,6,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
	Wat           CallRequest_Wat        `protobuf:"varint,7,opt,name=wat,proto3,enum=adlerhurst.example.v1.CallRequest_Wat" json:"wat,omitempty"`
	IsSomething   bool                   `protobuf:"varint,8,opt,name=is_something,json=isSomething,proto3" json:"is_something,omitempty"`
	I32           *int32                 `protobuf:"varint,9,opt,name=i32,proto3,oneof" json:"i32,omitempty"`
	Ui32          uint32                 `protobuf:"varint,10,opt,name=ui32,proto3" json:"ui32,omitempty"`
	I64           int64                  `protobuf:"varint,11,opt,name=i64,proto3" json:"i64,omitempty"`
	Ui64          uint64                 `protobuf:"varint,12,opt,name=ui64,proto3" json:"ui64,omitempty"`
	Fl            float32                `protobuf:"fixed32,13,opt,name=fl,proto3" json:"fl,omitempty"`
	Dbl           float64                `protobuf:"fixed64,14,opt,name=dbl,proto3" json:"dbl,omitempty"`
	Beiz          []byte                 `protobuf:"bytes,15,opt,name=beiz,proto3" json:"beiz,omitempty"`
	Si32          int32                  `protobuf:"zigzag32,16,opt,name=si32,proto3" json:"si32,omitempty"`
	Si64          int64                  `protobuf:"zigzag64,17,opt,name=si64,proto3" json:"si64,omitempty"`
	F32           uint32                 `protobuf:"fixed32,18,opt,name=f32,proto3" json:"f32,omitempty"`
	F64           uint64                 `protobuf:"fixed64,19,opt,name=f64,proto3" json:"f64,omitempty"`
	Sf32          int32                  `protobuf:"fixed32,20,opt,name=sf32,proto3" json:"sf32,omitempty"`
	Sf64          int64                  `protobuf:"fixed64,21,opt,name=sf64,proto3" json:"sf64,omitempty"`
	Some          Some                   `protobuf:"varint,22,opt,name=some,proto3,enum=adlerhurst.example.v1.Some" json:"some,omitempty"`
	RepS          []float64              `protobuf:"fixed64,23,rep,packed,name=rep_s,json=repS,proto3" json:"rep_s,omitempty"`
	RepWat        []CallRequest_Wat      `protobuf:"varint,24,rep,packed,name=rep_wat,json=repWat,proto3,enum=adlerhurst.example.v1.CallRequest_Wat" json:"rep_wat,omitempty"`
	Something     *anypb.Any             `protobuf:"bytes,25,opt,name=something,proto3,oneof" json:"something,omitempty"`
	// Types that are assignable to Oo:
	//
	//	*CallRequest_OoText
	//	*CallRequest_OoWat
	//	*CallRequest_OoNested
	Oo       isCallRequest_Oo  `protobuf_oneof:"oo"`
	Metadata map[string][]byte `protobuf:"bytes,29,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CallRequest) Reset() {
	*x = CallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adlerhurst_example_v1_example_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallRequest) ProtoMessage() {}

func (x *CallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adlerhurst_example_v1_example_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallRequest.ProtoReflect.Descriptor instead.
func (*CallRequest) Descriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{2}
}

func (x *CallRequest) GetUseFieldName() string {
	if x != nil {
		return x.UseFieldName
	}
	return ""
}

func (x *CallRequest) GetUseCustomName() string {
	if x != nil {
		return x.UseCustomName
	}
	return ""
}

func (x *CallRequest) GetNested() *CallRequest_Nested {
	if x != nil {
		return x.Nested
	}
	return nil
}

func (x *CallRequest) GetRepNest() []*CallRequest_Nested {
	if x != nil {
		return x.RepNest
	}
	return nil
}

func (x *CallRequest) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CallRequest) GetPayload() *structpb.Struct {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *CallRequest) GetWat() CallRequest_Wat {
	if x != nil {
		return x.Wat
	}
	return CallRequest_WAT_UNSPECIFIED
}

func (x *CallRequest) GetIsSomething() bool {
	if x != nil {
		return x.IsSomething
	}
	return false
}

func (x *CallRequest) GetI32() int32 {
	if x != nil && x.I32 != nil {
		return *x.I32
	}
	return 0
}

func (x *CallRequest) GetUi32() uint32 {
	if x != nil {
		return x.Ui32
	}
	return 0
}

func (x *CallRequest) GetI64() int64 {
	if x != nil {
		return x.I64
	}
	return 0
}

func (x *CallRequest) GetUi64() uint64 {
	if x != nil {
		return x.Ui64
	}
	return 0
}

func (x *CallRequest) GetFl() float32 {
	if x != nil {
		return x.Fl
	}
	return 0
}

func (x *CallRequest) GetDbl() float64 {
	if x != nil {
		return x.Dbl
	}
	return 0
}

func (x *CallRequest) GetBeiz() []byte {
	if x != nil {
		return x.Beiz
	}
	return nil
}

func (x *CallRequest) GetSi32() int32 {
	if x != nil {
		return x.Si32
	}
	return 0
}

func (x *CallRequest) GetSi64() int64 {
	if x != nil {
		return x.Si64
	}
	return 0
}

func (x *CallRequest) GetF32() uint32 {
	if x != nil {
		return x.F32
	}
	return 0
}

func (x *CallRequest) GetF64() uint64 {
	if x != nil {
		return x.F64
	}
	return 0
}

func (x *CallRequest) GetSf32() int32 {
	if x != nil {
		return x.Sf32
	}
	return 0
}

func (x *CallRequest) GetSf64() int64 {
	if x != nil {
		return x.Sf64
	}
	return 0
}

func (x *CallRequest) GetSome() Some {
	if x != nil {
		return x.Some
	}
	return Some_SOME_UNSPECIFIED
}

func (x *CallRequest) GetRepS() []float64 {
	if x != nil {
		return x.RepS
	}
	return nil
}

func (x *CallRequest) GetRepWat() []CallRequest_Wat {
	if x != nil {
		return x.RepWat
	}
	return nil
}

func (x *CallRequest) GetSomething() *anypb.Any {
	if x != nil {
		return x.Something
	}
	return nil
}

func (m *CallRequest) GetOo() isCallRequest_Oo {
	if m != nil {
		return m.Oo
	}
	return nil
}

func (x *CallRequest) GetOoText() string {
	if x, ok := x.GetOo().(*CallRequest_OoText); ok {
		return x.OoText
	}
	return ""
}

func (x *CallRequest) GetOoWat() CallRequest_Wat {
	if x, ok := x.GetOo().(*CallRequest_OoWat); ok {
		return x.OoWat
	}
	return CallRequest_WAT_UNSPECIFIED
}

func (x *CallRequest) GetOoNested() *CallRequest_Nested {
	if x, ok := x.GetOo().(*CallRequest_OoNested); ok {
		return x.OoNested
	}
	return nil
}

func (x *CallRequest) GetMetadata() map[string][]byte {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isCallRequest_Oo interface {
	isCallRequest_Oo()
}

type CallRequest_OoText struct {
	OoText string `protobuf:"bytes,26,opt,name=oo_text,json=ooText,proto3,oneof"`
}

type CallRequest_OoWat struct {
	OoWat CallRequest_Wat `protobuf:"varint,27,opt,name=oo_wat,json=ooWat,proto3,enum=adlerhurst.example.v1.CallRequest_Wat,oneof"`
}

type CallRequest_OoNested struct {
	OoNested *CallRequest_Nested `protobuf:"bytes,28,opt,name=oo_nested,json=ooNested,proto3,oneof"`
}

func (*CallRequest_OoText) isCallRequest_Oo() {}

func (*CallRequest_OoWat) isCallRequest_Oo() {}

func (*CallRequest_OoNested) isCallRequest_Oo() {}

type CallResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int64 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *CallResponse) Reset() {
	*x = CallResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adlerhurst_example_v1_example_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallResponse) ProtoMessage() {}

func (x *CallResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adlerhurst_example_v1_example_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallResponse.ProtoReflect.Descriptor instead.
func (*CallResponse) Descriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{3}
}

func (x *CallResponse) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type ServerSideStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ServerSideStreamRequest) Reset() {
	*x = ServerSideStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adlerhurst_example_v1_example_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSideStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSideStreamRequest) ProtoMessage() {}

func (x *ServerSideStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adlerhurst_example_v1_example_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSideStreamRequest.ProtoReflect.Descriptor instead.
func (*ServerSideStreamRequest) Descriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{4}
}

func (x *ServerSideStreamRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ServerSideStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int64 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *ServerSideStreamResponse) Reset() {
	*x = ServerSideStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adlerhurst_example_v1_example_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerSideStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerSideStreamResponse) ProtoMessage() {}

func (x *ServerSideStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adlerhurst_example_v1_example_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerSideStreamResponse.ProtoReflect.Descriptor instead.
func (*ServerSideStreamResponse) Descriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{5}
}

func (x *ServerSideStreamResponse) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type ClientSideStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ClientSideStreamRequest) Reset() {
	*x = ClientSideStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adlerhurst_example_v1_example_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientSideStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientSideStreamRequest) ProtoMessage() {}

func (x *ClientSideStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adlerhurst_example_v1_example_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientSideStreamRequest.ProtoReflect.Descriptor instead.
func (*ClientSideStreamRequest) Descriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{6}
}

func (x *ClientSideStreamRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type ClientSideStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int64 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *ClientSideStreamResponse) Reset() {
	*x = ClientSideStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adlerhurst_example_v1_example_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientSideStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientSideStreamResponse) ProtoMessage() {}

func (x *ClientSideStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adlerhurst_example_v1_example_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientSideStreamResponse.ProtoReflect.Descriptor instead.
func (*ClientSideStreamResponse) Descriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{7}
}

func (x *ClientSideStreamResponse) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type BidirectionalStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *BidirectionalStreamRequest) Reset() {
	*x = BidirectionalStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adlerhurst_example_v1_example_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidirectionalStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidirectionalStreamRequest) ProtoMessage() {}

func (x *BidirectionalStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_adlerhurst_example_v1_example_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidirectionalStreamRequest.ProtoReflect.Descriptor instead.
func (*BidirectionalStreamRequest) Descriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{8}
}

func (x *BidirectionalStreamRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type BidirectionalStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int64 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *BidirectionalStreamResponse) Reset() {
	*x = BidirectionalStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adlerhurst_example_v1_example_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BidirectionalStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BidirectionalStreamResponse) ProtoMessage() {}

func (x *BidirectionalStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_adlerhurst_example_v1_example_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BidirectionalStreamResponse.ProtoReflect.Descriptor instead.
func (*BidirectionalStreamResponse) Descriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{9}
}

func (x *BidirectionalStreamResponse) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type NestedRequest_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Depth int32  `protobuf:"varint,2,opt,name=depth,proto3" json:"depth,omitempty"`
}

func (x *NestedRequest_Nested) Reset() {
	*x = NestedRequest_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adlerhurst_example_v1_example_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedRequest_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedRequest_Nested) ProtoMessage() {}

func (x *NestedRequest_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_adlerhurst_example_v1_example_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedRequest_Nested.ProtoReflect.Descriptor instead.
func (*NestedRequest_Nested) Descriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{0, 0}
}

func (x *NestedRequest_Nested) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *NestedRequest_Nested) GetDepth() int32 {
	if x != nil {
		return x.Depth
	}
	return 0
}

type CallRequest_Nested struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
}

func (x *CallRequest_Nested) Reset() {
	*x = CallRequest_Nested{}
	if protoimpl.UnsafeEnabled {
		mi := &file_adlerhurst_example_v1_example_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallRequest_Nested) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallRequest_Nested) ProtoMessage() {}

func (x *CallRequest_Nested) ProtoReflect() protoreflect.Message {
	mi := &file_adlerhurst_example_v1_example_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallRequest_Nested.ProtoReflect.Descriptor instead.
func (*CallRequest_Nested) Descriptor() ([]byte, []int) {
	return file_adlerhurst_example_v1_example_proto_rawDescGZIP(), []int{2, 0}
}

func (x *CallRequest_Nested) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

var File_adlerhurst_example_v1_example_proto protoreflect.FileDescriptor

var file_adlerhurst_example_v1_example_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2f, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72, 0x73,
	0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x20, 0x61, 0x64,
	0x6c, 0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2f, 0x63, 0x6c, 0x69, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2f, 0x63, 0x6c, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61,
	0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x01, 0x0a, 0x0d, 0x4e, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x06, 0x6e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x64, 0x6c,
	0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x1a,
	0x2e, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x70,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x70, 0x74, 0x68, 0x22,
	0x10, 0x0a, 0x0e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xbe, 0x0a, 0x0a, 0x0b, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0c, 0xc2, 0xf3, 0x18, 0x08, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x52, 0x0d,
	0x75, 0x73, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a,
	0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x06, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x12, 0x44, 0x0a, 0x08, 0x72, 0x65, 0x70, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x4e, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x06, 0xc2, 0xf3, 0x18, 0x02, 0x10, 0x01, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x42, 0x06, 0xc2, 0xf3, 0x18, 0x02, 0x10, 0x01, 0x48, 0x01, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x03, 0x77, 0x61, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75,
	0x72, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x61, 0x74, 0x52, 0x03,
	0x77, 0x61, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x6f, 0x6d, 0x65, 0x74, 0x68,
	0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x6f, 0x6d,
	0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x0a, 0x03, 0x69, 0x33, 0x32, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x48, 0x02, 0x52, 0x03, 0x69, 0x33, 0x32, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x69, 0x33, 0x32, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x69, 0x33,
	0x32, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x36, 0x34, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x69, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x69, 0x36, 0x34, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x75, 0x69, 0x36, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x02, 0x66, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x62, 0x6c, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x62, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x65, 0x69,
	0x7a, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x65, 0x69, 0x7a, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x33, 0x32, 0x18, 0x10, 0x20, 0x01, 0x28, 0x11, 0x52, 0x04, 0x73, 0x69, 0x33,
	0x32, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x36, 0x34, 0x18, 0x11, 0x20, 0x01, 0x28, 0x12, 0x52,
	0x04, 0x73, 0x69, 0x36, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x33, 0x32, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x07, 0x52, 0x03, 0x66, 0x33, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x36, 0x34, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x06, 0x52, 0x03, 0x66, 0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x66, 0x33,
	0x32, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0f, 0x52, 0x04, 0x73, 0x66, 0x33, 0x32, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x66, 0x36, 0x34, 0x18, 0x15, 0x20, 0x01, 0x28, 0x10, 0x52, 0x04, 0x73, 0x66, 0x36,
	0x34, 0x12, 0x2f, 0x0a, 0x04, 0x73, 0x6f, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x6d, 0x65, 0x52, 0x04, 0x73, 0x6f,
	0x6d, 0x65, 0x12, 0x13, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x5f, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x04, 0x72, 0x65, 0x70, 0x53, 0x12, 0x3f, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x5f, 0x77,
	0x61, 0x74, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72,
	0x68, 0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57, 0x61, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x70, 0x57, 0x61, 0x74, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x6f, 0x6d, 0x65,
	0x74, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x48, 0x03, 0x52, 0x09, 0x73, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x07, 0x6f, 0x6f, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x6f, 0x54, 0x65, 0x78, 0x74, 0x12, 0x3f, 0x0a, 0x06,
	0x6f, 0x6f, 0x5f, 0x77, 0x61, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x61,
	0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x57, 0x61, 0x74, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x6f, 0x57, 0x61, 0x74, 0x12, 0x48, 0x0a,
	0x09, 0x6f, 0x6f, 0x5f, 0x6e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x08, 0x6f,
	0x6f, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x4c, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x64, 0x6c, 0x65,
	0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x1e, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x36, 0x0a, 0x03, 0x57, 0x61, 0x74, 0x12, 0x13, 0x0a, 0x0f, 0x57, 0x41, 0x54,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x57, 0x41, 0x54, 0x5f, 0x57, 0x45, 0x49, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x57, 0x41, 0x54, 0x5f, 0x49, 0x43, 0x48, 0x10, 0x02, 0x42, 0x04, 0x0a, 0x02, 0x6f, 0x6f,
	0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x06, 0x0a, 0x04,
	0x5f, 0x69, 0x33, 0x32, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x73, 0x6f, 0x6d, 0x65, 0x74, 0x68, 0x69,
	0x6e, 0x67, 0x22, 0x26, 0x0a, 0x0c, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x2d, 0x0a, 0x17, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x32, 0x0a, 0x18, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x2d, 0x0a,
	0x17, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x32, 0x0a, 0x18,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x30, 0x0a, 0x1a, 0x42, 0x69, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x35, 0x0a, 0x1b, 0x42, 0x69, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2a, 0x30, 0x0a, 0x04, 0x53, 0x6f, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x4f, 0x4d, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x4f, 0x4d, 0x45, 0x5f,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x01, 0x32, 0xe2, 0x04, 0x0a, 0x0e,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65,
	0x0a, 0x04, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x22, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75,
	0x72, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x64, 0x6c,
	0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x14, 0xc2, 0xf3, 0x18, 0x10, 0x0a, 0x06, 0x6d, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x1a, 0x06, 0x0a,
	0x04, 0x63, 0x61, 0x6c, 0x6c, 0x12, 0x55, 0x0a, 0x06, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12,
	0x24, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72,
	0x73, 0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x75, 0x0a, 0x10,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53, 0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x12, 0x2e, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x53,
	0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x30, 0x01, 0x12, 0x75, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64,
	0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x2e, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68,
	0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68,
	0x75, 0x72, 0x73, 0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x64, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x12, 0x80, 0x01, 0x0a, 0x13, 0x42,
	0x69, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6d, 0x12, 0x31, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72, 0x73, 0x74, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x64, 0x6c, 0x65, 0x72, 0x68, 0x75, 0x72,
	0x73, 0x74, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x69,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x1a, 0x21, 0xc2,
	0xf3, 0x18, 0x1d, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x1a, 0x06, 0x0a, 0x04,
	0x63, 0x61, 0x6c, 0x6c, 0x1a, 0x0a, 0x0a, 0x06, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x10, 0x01,
	0x42, 0x38, 0xc2, 0xf3, 0x18, 0x0d, 0x0a, 0x0b, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x2d,
	0x63, 0x6c, 0x69, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x63, 0x6c, 0x69, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x2f, 0x63, 0x6c, 0x69, 0x3b, 0x63, 0x6c, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_adlerhurst_example_v1_example_proto_rawDescOnce sync.Once
	file_adlerhurst_example_v1_example_proto_rawDescData = file_adlerhurst_example_v1_example_proto_rawDesc
)

func file_adlerhurst_example_v1_example_proto_rawDescGZIP() []byte {
	file_adlerhurst_example_v1_example_proto_rawDescOnce.Do(func() {
		file_adlerhurst_example_v1_example_proto_rawDescData = protoimpl.X.CompressGZIP(file_adlerhurst_example_v1_example_proto_rawDescData)
	})
	return file_adlerhurst_example_v1_example_proto_rawDescData
}

var file_adlerhurst_example_v1_example_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_adlerhurst_example_v1_example_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_adlerhurst_example_v1_example_proto_goTypes = []interface{}{
	(Some)(0),                           // 0: adlerhurst.example.v1.Some
	(CallRequest_Wat)(0),                // 1: adlerhurst.example.v1.CallRequest.Wat
	(*NestedRequest)(nil),               // 2: adlerhurst.example.v1.NestedRequest
	(*NestedResponse)(nil),              // 3: adlerhurst.example.v1.NestedResponse
	(*CallRequest)(nil),                 // 4: adlerhurst.example.v1.CallRequest
	(*CallResponse)(nil),                // 5: adlerhurst.example.v1.CallResponse
	(*ServerSideStreamRequest)(nil),     // 6: adlerhurst.example.v1.ServerSideStreamRequest
	(*ServerSideStreamResponse)(nil),    // 7: adlerhurst.example.v1.ServerSideStreamResponse
	(*ClientSideStreamRequest)(nil),     // 8: adlerhurst.example.v1.ClientSideStreamRequest
	(*ClientSideStreamResponse)(nil),    // 9: adlerhurst.example.v1.ClientSideStreamResponse
	(*BidirectionalStreamRequest)(nil),  // 10: adlerhurst.example.v1.BidirectionalStreamRequest
	(*BidirectionalStreamResponse)(nil), // 11: adlerhurst.example.v1.BidirectionalStreamResponse
	(*NestedRequest_Nested)(nil),        // 12: adlerhurst.example.v1.NestedRequest.Nested
	(*CallRequest_Nested)(nil),          // 13: adlerhurst.example.v1.CallRequest.Nested
	nil,                                 // 14: adlerhurst.example.v1.CallRequest.MetadataEntry
	(*timestamppb.Timestamp)(nil),       // 15: google.protobuf.Timestamp
	(*structpb.Struct)(nil),             // 16: google.protobuf.Struct
	(*anypb.Any)(nil),                   // 17: google.protobuf.Any
}
var file_adlerhurst_example_v1_example_proto_depIdxs = []int32{
	12, // 0: adlerhurst.example.v1.NestedRequest.nested:type_name -> adlerhurst.example.v1.NestedRequest.Nested
	13, // 1: adlerhurst.example.v1.CallRequest.nested:type_name -> adlerhurst.example.v1.CallRequest.Nested
	13, // 2: adlerhurst.example.v1.CallRequest.rep_nest:type_name -> adlerhurst.example.v1.CallRequest.Nested
	15, // 3: adlerhurst.example.v1.CallRequest.created_at:type_name -> google.protobuf.Timestamp
	16, // 4: adlerhurst.example.v1.CallRequest.payload:type_name -> google.protobuf.Struct
	1,  // 5: adlerhurst.example.v1.CallRequest.wat:type_name -> adlerhurst.example.v1.CallRequest.Wat
	0,  // 6: adlerhurst.example.v1.CallRequest.some:type_name -> adlerhurst.example.v1.Some
	1,  // 7: adlerhurst.example.v1.CallRequest.rep_wat:type_name -> adlerhurst.example.v1.CallRequest.Wat
	17, // 8: adlerhurst.example.v1.CallRequest.something:type_name -> google.protobuf.Any
	1,  // 9: adlerhurst.example.v1.CallRequest.oo_wat:type_name -> adlerhurst.example.v1.CallRequest.Wat
	13, // 10: adlerhurst.example.v1.CallRequest.oo_nested:type_name -> adlerhurst.example.v1.CallRequest.Nested
	14, // 11: adlerhurst.example.v1.CallRequest.metadata:type_name -> adlerhurst.example.v1.CallRequest.MetadataEntry
	4,  // 12: adlerhurst.example.v1.ExampleService.Call:input_type -> adlerhurst.example.v1.CallRequest
	2,  // 13: adlerhurst.example.v1.ExampleService.Nested:input_type -> adlerhurst.example.v1.NestedRequest
	6,  // 14: adlerhurst.example.v1.ExampleService.ServerSideStream:input_type -> adlerhurst.example.v1.ServerSideStreamRequest
	8,  // 15: adlerhurst.example.v1.ExampleService.ClientSideStream:input_type -> adlerhurst.example.v1.ClientSideStreamRequest
	10, // 16: adlerhurst.example.v1.ExampleService.BidirectionalStream:input_type -> adlerhurst.example.v1.BidirectionalStreamRequest
	5,  // 17: adlerhurst.example.v1.ExampleService.Call:output_type -> adlerhurst.example.v1.CallResponse
	3,  // 18: adlerhurst.example.v1.ExampleService.Nested:output_type -> adlerhurst.example.v1.NestedResponse
	7,  // 19: adlerhurst.example.v1.ExampleService.ServerSideStream:output_type -> adlerhurst.example.v1.ServerSideStreamResponse
	9,  // 20: adlerhurst.example.v1.ExampleService.ClientSideStream:output_type -> adlerhurst.example.v1.ClientSideStreamResponse
	11, // 21: adlerhurst.example.v1.ExampleService.BidirectionalStream:output_type -> adlerhurst.example.v1.BidirectionalStreamResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_adlerhurst_example_v1_example_proto_init() }
func file_adlerhurst_example_v1_example_proto_init() {
	if File_adlerhurst_example_v1_example_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_adlerhurst_example_v1_example_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adlerhurst_example_v1_example_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adlerhurst_example_v1_example_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adlerhurst_example_v1_example_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adlerhurst_example_v1_example_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSideStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adlerhurst_example_v1_example_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerSideStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adlerhurst_example_v1_example_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientSideStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adlerhurst_example_v1_example_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientSideStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adlerhurst_example_v1_example_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidirectionalStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adlerhurst_example_v1_example_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BidirectionalStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adlerhurst_example_v1_example_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedRequest_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_adlerhurst_example_v1_example_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallRequest_Nested); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_adlerhurst_example_v1_example_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*CallRequest_OoText)(nil),
		(*CallRequest_OoWat)(nil),
		(*CallRequest_OoNested)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_adlerhurst_example_v1_example_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_adlerhurst_example_v1_example_proto_goTypes,
		DependencyIndexes: file_adlerhurst_example_v1_example_proto_depIdxs,
		EnumInfos:         file_adlerhurst_example_v1_example_proto_enumTypes,
		MessageInfos:      file_adlerhurst_example_v1_example_proto_msgTypes,
	}.Build()
	File_adlerhurst_example_v1_example_proto = out.File
	file_adlerhurst_example_v1_example_proto_rawDesc = nil
	file_adlerhurst_example_v1_example_proto_goTypes = nil
	file_adlerhurst_example_v1_example_proto_depIdxs = nil
}
