package types

import (
	"bytes"
	"log/slog"
	"regexp"
	"text/template"

	"golang.org/x/text/cases"
	"golang.org/x/text/language"
	"google.golang.org/protobuf/compiler/protogen"
)

var (
	title = cases.Title(language.English, cases.NoLower)
	lower = cases.Lower(language.English)
)

func removeWhitespaces(s string) string {
	re := regexp.MustCompile(`(^\s|\s$)`)
	return re.ReplaceAllString(s, "")
}

func header(gen *protogen.GeneratedFile, file *protogen.File) {
	gen.P("// Code generated by protoc-gen-go-cli. DO NOT EDIT.")
	gen.P()
	gen.P("package ", file.GoPackageName)
	gen.P()
}

func executeTemplate(gen *protogen.GeneratedFile, tmpl *template.Template, data any) error {
	var buffer bytes.Buffer

	if err := tmpl.Execute(&buffer, data); err != nil {
		slog.Error("failed to execute template", "cause", err)
		return err
	}

	_, err := gen.Write(buffer.Bytes())
	if err != nil {
		slog.Error("failed to write", "cause", err)
	}

	return err
}
